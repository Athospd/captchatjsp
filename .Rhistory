d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'aawaf', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ikjae', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ywbfp', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'eadfs', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'kuzqs', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'eqate', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'mqkhe', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'uqtzc', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'xncna', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'zidvw', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ykcqh', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'eurex', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'zyeej', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ymcvw', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'nkvpf', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'qmzjh', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'edmvs', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'mjupe', path)
treino <- dplyr::bind_rows(
lapply(list.files(path, full.names = TRUE), function(x) {
d <- readRDS(x)
if(nrow(d) > 0) {
d$arq <- x
return(d)
}
})
)
treino$letra <- stringr::str_match(treino$arq, '.+//([a-z])')[, 2]
letras <- dplyr::count(dplyr::distinct(treino, arq), letra)
letras <- dplyr::arrange(letras, letra)
letters[!letters %in% letras$letra]
sum(letras$n)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ihskk', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'fntrt', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ceezb', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'ywhkd', path)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'nwafr', path)
treino <- dplyr::bind_rows(
lapply(list.files(path, full.names = TRUE), function(x) {
d <- readRDS(x)
if(nrow(d) > 0) {
d$arq <- x
return(d)
}
})
)
treino$letra <- stringr::str_match(treino$arq, '.+//([a-z])')[, 2]
letras <- dplyr::count(dplyr::distinct(treino, arq), letra)
letras <- dplyr::arrange(letras, letra)
letters[!letters %in% letras$letra]
sum(letras$n)
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'easiy', path)
treino <- dplyr::bind_rows(
lapply(list.files(path, full.names = TRUE), function(x) {
d <- readRDS(x)
if(nrow(d) > 0) {
d$arq <- x
return(d)
}
})
)
treino$letra <- stringr::str_match(treino$arq, '.+//([a-z])')[, 2]
letras <- dplyr::count(dplyr::distinct(treino, arq), letra)
letras <- dplyr::arrange(letras, letra)
letters[!letters %in% letras$letra]
sum(letras$n)
library(dplyr)
treino <- dplyr::bind_rows(
lapply(list.files(path, full.names = TRUE), function(x) {
d <- readRDS(x)
if(nrow(d) > 0) {
d$arq <- x
return(d)
}
})
)
treino$letra <- stringr::str_match(treino$arq, '.+//([a-z])')[, 2]
treino
library(tidyr)
install.packages('tidyr')
library(tidyr)
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', ys)) %>%
unite(xy, xs, ys, sep = '_') %>%
spread(xy, letra, default = 0)
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', y)) %>%
unite(xy, xs, ys, sep = '_') %>%
spread(xy, letra, default = 0)
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', y)) %>%
unite(xy, xs, ys, sep = '_') %>%
spread(xy, letra, fill = 0)
View(d_treino)
dim(d_treino)
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', y)) %>%
unite(xy, xs, ys, sep = '_') %>%
select(arq, xy, letra) %>%
spread(xy, letra, fill = 0)
View(d_treino)
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', y)) %>%
unite(xy, xs, ys, sep = '_') %>%
select(arq, xy, letra) %>%
spread(xy, letra, fill = 0) %>%
mutate_each(funs(ifelse(.=='0', 0, 1)), starts_with('x')) %>%
mutate(letra = str_match(arq, '.+//([a-z])')[, 2])
d_treino <- treino %>%
group_by(arq) %>%
mutate(x = x - min(x), y = y - min(y)) %>%
ungroup %>%
mutate(xs = sprintf('x%02d', x), ys = sprintf('y%02d', y)) %>%
unite(xy, xs, ys, sep = '_') %>%
select(arq, xy, letra) %>%
spread(xy, letra, fill = 0) %>%
mutate_each(funs(ifelse(.=='0', 0, 1)), starts_with('x')) %>%
mutate(letra = stringr::str_match(arq, '.+//([a-z])')[, 2])
dim(d_treino)
devtools::document() ; devtools::install()
library(dplyr)
library(tidyr)
library(captchatjsp)
d_treino <- carrega_treino('inst/treino/')
d_treino
d <- baixar(); desenhar(d)
classificar(picotar(limpar(d)), 'xzzcs', path)
d_treino <- carrega_treino('inst/treino/')
dim(d_treino)
devtools::document() ; devtools::install()
d <- ler(baixar())
carrega_teste(d)
carregar_teste(d)
devtools::document() ; devtools::install()
install.packages('tree')
d_treino
modelo <- tree::tree(letra ~ ., select(d_treino, -arq))
modelo
d_treino$letra
modelo <- tree::tree(letra ~ ., select(d_treino, -arq))
modelo
modelo <- tree::tree(letra ~ ., data = select(d_treino, -arq))
modelo <- glm(letra ~ ., data = select(d_treino, -arq), family = binomial)
library(tree)
teste <- carregar_teste(d)
teste
modelo <- tree(letra ~ ., data = select(d_treino, -arq))
d_treino$letra <- as.factor(d_treino$letra)
modelo <- tree(letra ~ ., data = select(d_treino, -arq))
modelo
predicao <- predict(modelo, teste)
head(teste)
names(d_treino)
nm <- names(select(d_treino, -arq, -letra))
nm[!nm %in% names(teste)]
nm <- names(select(d_treino, -arq, -letra))
teste[, nm[!nm %in% names(teste)]] <- 0
names(teste)
predicao <- predict(modelo, teste)
predicao
apply(predicao, 2, function(x) {
which(x == max(x))
})
str(predicao)
apply(predicao$num, 2, function(x) {
which(x == max(x))
})
predicao$num
apply(predicao, 2, function(x) {
which(x == max(x))
})
apply(predicao, 1, function(x) {
which(x == max(x))
})
apply(predicao, 1, function(x) {
which(x == max(x))[1]
})
apply(predicao, 1, function(x) {
names(x[which(x == max(x))[1]])
})
d
desenhar(d)
apply(predicao, 1, function(x) {names(x[which(x == max(x))[1]])})
save(modelo, file = 'data/modelo.rda')
dir.create('data')
save(d_treino, file = 'data/d_treino.rda')
paste0(apply(predicao, 1, function(x) {names(x[which(x == max(x))[1]])}))
apply(predicao, 1, function(x) {names(x[which(x == max(x))[1]])})
paste0(apply(predicao, 1, function(x) {names(x[which(x == max(x))[1]])}), collapse = '')
devtools::document() ; devtools::install()
d <- ler(baixar())
desenhar(d)
prever(d)
devtools::document() ; devtools::install()
d <- ler(baixar())
desenhar(d)
prever(d)
d <- ler(baixar())
desenhar(d)
prever(d)
modelo
save(modelo, file = 'data/modelo.rda')
devtools::document() ; devtools::install()
devtools::document() ; devtools::install()
library(dplyr)
library(tidyr)
library(tree)
library(captchatjsp)
d <- ler(baixar())
devtools::document() ; devtools::install()
d <- ler(baixar())
desenhar(d)
prever(d)
d <- ler(baixar())
desenhar(d)
prever(d)
d <- ler(baixar())
desenhar(d)
prever(d)
d <- ler(baixar())
desenhar(d)
prever(d)
d <- ler(baixar())
desenhar(d)
prever(d)
d <- baixar(); desenhar(d)
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'zjvut', path)
path <- 'inst/treino/'
classificar(picotar(limpar(d)), 'zjvut', path)
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'kivwc', path)
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'kqfpi', path)
devtools::document() ; devtools::install()
d_treino <- carregar_treino('inst/treino/')
dim(d_treino)
d_treino$letra <- as.factor(d_treino$letra)
modelo <- tree(letra ~ ., data = select(d_treino, -arq))
save(d_treino, file = 'data/d_treino.rda')
save(modelo, file = 'data/modelo.rda')
devtools::document() ; devtools::install()
devtools::document() ; devtools::install()
d <- ler(baixar()); desenhar(d)
prever(d)
library(dplyr)
library(tidyr)
library(tree)
library(captchatjsp)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
library(dplyr)
library(tidyr)
library(tree)
library(captchatjsp)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'mmpez', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'bytmn', path)
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'jcrir', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'vfyrq', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'kfiwf', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'jyakd', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'mziqe', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'nqbwr', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'hdaki', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'ceqrj', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'qaznq', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'kunnr', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'ewwvy', path)
d_treino <- carregar_treino('inst/treino/')
d_treino$letra <- as.factor(d_treino$letra)
cv_tree <- cv.tree(modelo)
plot(cv_tree)
modelo <- prune.tree(modelo, best = 24)
save(d_treino, file = 'data/d_treino.rda')
save(modelo, file = 'data/modelo.rda')
devtools::document(); devtools::install()
devtools::document(); devtools::install()
library(dplyr)
library(tidyr)
library(tree)
library(captchatjsp)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
dim(d_treino)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d)
prever(d)
head(d_treino)
d <- d_treino
l <- 'a'
d %>%
filter(letra == l) %>%
gather(key, val, starts_with('x'))
d %>%
filter(letra == l) %>%
gather(key, val, starts_with('x')) %>%
filter(val == 1) %>%
separate(key, c('x', 'y'), sep = '_') %>%
mutate(x = as.numeric(gsub('[^0-9]', '', x)),
y = as.numeric(gsub('[^0-9]', '', y))) %>%
mutate(grupo = arq) %>%
desenhar
devtools::document(); devtools::install()
devtools::document(); devtools::install()
desenhar_treino(d_treino, 'b')
desenhar_treino(d_treino, 'c')
desenhar_treino(d_treino, 'd')
desenhar_treino(d_treino, 'b')
desenhar_treino(d_treino, 'h')
file.remove('inst/treino/h_21044967.rds')
desenhar_treino(d_treino, 'd')
desenhar_treino(d_treino, 'e')
desenhar_treino(d_treino, 'f')
desenhar_treino(d_treino, 'h')
desenhar_treino(d_treino, 'i')
desenhar_treino(d_treino, 'j')
file.remove('inst/treino/j_10376050.rds.rds')
file.remove('inst/treino/j_10376050.rds')
file.remove('inst/treino/j_80634057.rds')
file.remove('inst/treino/j_93705168.rds')
desenhar_treino(d_treino, 'k')
desenhar_treino(d_treino, 'l')
desenhar_treino(d_treino, 'm')
desenhar_treino(d_treino, 'n')
desenhar_treino(d_treino, 'p')
desenhar_treino(d_treino, 'q')
desenhar_treino(d_treino, 'r')
desenhar_treino(d_treino, 's')
desenhar_treino(d_treino, 't')
desenhar_treino(d_treino, 'u')
file.remove('inst/treino/u_77911330.rds')
desenhar_treino(d_treino, 'v')
desenhar_treino(d_treino, 'w')
file.remove('inst/treino/w_27495711.rds.rds')
file.remove('inst/treino/w_27495711.rds')
file.remove('inst/treino/w_85482491.rds')
file.remove('inst/treino/w_97775657.rds')
file.remove('inst/treino/w_92070759.rds')
d_treino <- carregar_treino('inst/treino/')
d_treino$letra <- as.factor(d_treino$letra)
modelo <- tree(letra ~ ., data = select(d_treino, -arq))
cv_tree <- cv.tree(modelo)
plot(cv_tree)
modelo <- prune.tree(modelo, best = 25)
save(d_treino, file = 'data/d_treino.rda')
save(modelo, file = 'data/modelo.rda')
devtools::document(); devtools::install()
devtools::document(); devtools::install()
d <- ler(baixar()); desenhar(d)
prever(d)
library(dplyr)
library(tidyr)
library(tree)
library(captchatjsp)
d <- ler(baixar()); desenhar(d)
prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
d <- ler(baixar()); desenhar(d); prever(d)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'wseec', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'aczny', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'athbj', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'rhawa', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'vrurb', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'kbctb', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'pxwyd', path)
path <- 'inst/treino/'
d <- ler(baixar()); desenhar(d)
classificar(picotar(limpar(d)), 'qmiqx', path)
